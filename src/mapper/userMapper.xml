<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace和定义的Mapper接口对应，并实现其中的方法 -->
<mapper namespace="com.wangku.mapper.UserMapper">
	<resultMap type="com.wangku.entity.User" id="userResultMap">
		<id property="id" column="id" />
		<result property="teamId" column="team_id" />
		<result property="name" column="name" />
		<result property="account" column="account" />
		<result property="password" column="password" />
		<result property="gender" column="gender" />
		<result property="birthday" column="birthday" />
		<result property="status" column="status" />
	</resultMap>
	
	<!-- 自动生成id策略 -->
	<insert id="addUser" parameterType="com.wangku.entity.User">
		insert into user(id, team_id, name, account, password, gender, birthday, status)
		values(#{id}, #{team_id}, #{name}, #{account}, #{password}, #{gender}, #{birthday}, #{status})
	</insert>

	<delete id="removeUser" parameterType="long">
		delete from user
		where
		id = #{id}
	</delete>

	<update id="editUser" parameterType="com.wangku.entity.User">
		update user set
		team_id = #{team_id}, 
		name = #{name}, 
		account = #{account}, 
		gender = #{gender}, 
		birthday = #{birthday}, 
		status = #{status}
		where
		id = #{id}
	</update>

	<select id="getAllUser" resultType="list" resultMap="userResultMap">
		<![CDATA[
			select * from user
        ]]>
	</select>

	<!-- userResultMap是account-resultmap.xml中定义的resultmap -->
	<select id="getUserById" parameterType="long" resultMap="userResultMap">
		<![CDATA[
			select * from user where id = #{id}
        ]]>
	</select>
	
	<select id="login" parameterType="Map" resultType="com.wangku.entity.User">
		<![CDATA[
			select * from user 
			where account = #{username} and password = #{password}
        ]]>
	</select>
</mapper>
